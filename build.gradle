plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'org.flywaydb.flyway' version '8.0.4'  // Flywayプラグインの追加
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.flywaydb:flyway-core:8.0.4'
    implementation 'org.springframework.security:spring-security-oauth2-authorization-server:1.1.0'  // 追加
    implementation 'org.springframework.security:spring-security-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'com.auth0:java-jwt:3.18.1'  // JWTライブラリの追加
}

tasks.named('test') {
    useJUnitPlatform()
}

// Flyway設定の追加
flyway {
    url = 'jdbc:postgresql://db:5432/mydatabase'
    user = 'postgres'
    password = 'postgres'
}

// メインクラスの指定
springBoot {
    mainClass.set('com.example.demo.JavaAppApplication')
}
